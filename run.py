import logging
import smtplib
from email import encoders
from email.mime.application import MIMEApplication
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from typing import List

from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import MediaGroupFilter
from aiogram.types import ParseMode, ContentType

from keyboards import *

API_TOKEN = '1825629775:AAHXI8_JonznuHT2MMa4hpkfzArmy3rouoM'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())


@dp.message_handler(commands=['start', 'help'], state='*')
async def send_welcome(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    await state.update_data(user_id=user_id, username=message.from_user.username)
    await state.set_state("get_lang")
    markup = await languages_keyboard()
    await message.reply("Tilni tanlang/ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=markup, parse_mode=ParseMode.HTML)


@dp.message_handler(state="get_lang")
async def agree(message: types.Message, state: FSMContext):
    call_data = message.text
    user_id = message.from_user.id
    if call_data == 'üá∑üá∫–†—É—Å—Å–∫–∏–π —è–∑—ã–∫':
        markup = await agree_keyboard("ru")
        await state.update_data(lang="ru")
        text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –¥–ª—è –±–æ—Ä—å–±—ã —Å –∫–æ—Ä—Ä—É–ø—Ü–∏–µ–π –∏ –∞–Ω—Ç–∏–∫–æ—Ä—Ä—É–ø—Ü–∏–æ–Ω–Ω–æ–π " \
               "–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å—Ñ–µ—Ä–µ —Ç—É—Ä–∏–∑–º–∞!\n\n<b>–í–∞–∂–Ω—ã–π!</b> –ó–∞–∫–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω ¬´<b>–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</b>¬ª " \
               "–ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —Ç—Ä–∞–Ω—Å–≥—Ä–∞–Ω–∏—á–Ω—É—é –ø–µ—Ä–µ–¥–∞—á—É –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–æ–≥–ª–∞—Å–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö " \
               "–ª–∏—Ü –Ω–∞ —Ç—Ä–∞–Ω—Å–≥—Ä–∞–Ω–∏—á–Ω—É—é –ø–µ—Ä–µ–¥–∞—á—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å " \
               "@turizm_va_sport_vazirligi_–∞–Ω—Ç–∏–∫–æ—Ä—Ä—É–ø—Ü–∏—è_–±–æ—Ç–∞ (@motas_antikor_bot) –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –¥–∞–Ω–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º, " \
               "–≤—ã –¥–æ–ª–∂–Ω—ã –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. "
    else:
        markup = await agree_keyboard("uz")
        await state.update_data(lang="uz")
        text = "Assalomu alaykum, Turizm va sport sohasida korrupsion holatlarni va korrupsiyaga doir faoliyatlarga " \
               "qarshi kurashish uchun yaratilgan botga xush kelibsiz! \n\n<b>Muxim!</b> Jismoniy shaxslarning o‚Äòz shaxsiga " \
               "ta‚Äôluqli ma‚Äôlumotlarini transchegaraviy uzatishga roziligi mavjud bo‚Äòlgan taqdirdagina ma‚Äôlumotlarni " \
               "transchegaraviy uzatishning amalga oshirilishi O‚Äòzbekiston Respublikasining  ‚ÄúShaxsga doir " \
               "ma‚Äôlumotlar to‚Äòg‚Äòrisida‚Äùgi Qonunda nazarda tutilgan. \n\nMazkur qonunga asosan " \
               "@turizm_va_sport_vazirligi_anticorruption_bot (@motas_antikor_bot) dan foydalanish uchun Sizning " \
               "shaxsingizga doir ma‚Äôlumotlaringizdan foydalanishga rozilik bildirishingiz lozim. "
    await bot.send_message(chat_id=user_id, text=text, parse_mode=ParseMode.HTML, reply_markup=markup)
    await state.set_state("choose")


@dp.message_handler(state='choose')
async def choose(message: types.Message, state: FSMContext):
    data = await state.get_data()
    text = message.text
    lang = data.get("lang")
    if lang == "uz":
        if text == "‚úÖRoziman":
            data = "confirm"
        else:
            data = "cancel"
        text = "Ma‚Äôqul variantni tanlang:"
    else:
        if text == "‚úÖ–Ø —Å–æ–≥–ª–∞—Å–µ–Ω":
            data = "confirm"
        else:
            data = "cancel"
        text = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:"

    if data == "confirm":
        markup = await choose_keyboard(lang)
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=markup)
        await state.set_state("legal")
    else:
        markup = await languages_keyboard()
        await bot.send_message(chat_id=message.from_user.id, text="Tilni tanlang/ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=markup,
                               parse_mode=ParseMode.HTML)
        await state.set_state("get_lang")


@dp.message_handler(state="legal")
async def legal(message: types.Message, state: FSMContext):
    data = await state.get_data()
    text_message = message.text
    lang = data.get("lang")
    if lang == "uz":
        text = "Shaxs turini tanlang:"
    else:
        text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ª–∏—Ü–∞:"
    markup = await check_legal(lang)
    await state.update_data(choose=text_message)
    await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=markup)
    await state.set_state("name")


@dp.message_handler(state="name")
async def get_name(message: types.Message, state: FSMContext):
    message_text = message.text
    data = await state.get_data()
    lang = data.get("lang")
    datacha = ''
    choosing = data.get("choose")
    if lang == "uz":
        if choosing == "üñä Taklif va tavsiyalar yuborish":
            datacha = "taklif"
        elif choosing == "üì© Murojaat va shikoyatlar yuborish":
            datacha = "murojaat"
        else:
            datacha = "boshqa"
    if datacha == "taklif":
        if lang == "uz":
            text = "Taklif va tavsiyalar beruvchi F.I.Sh / yuridik shaxs nomini kiriting"
        else:
            text = "–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ª–∏—Ü–∞, –¥–µ–ª–∞—é—â–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –§.–ò.–®/—é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ"
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=types.ReplyKeyboardRemove())
        await state.set_state("get_name")
    elif datacha == "murojaat":
        if lang == "uz":
            text = "Murojaat va shikoyatlar beruvchi F.I.Sh / yuridik shaxs nomini kiriting"
        else:
            text = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –§.–ò.–®/—é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞, –ø–æ–¥–∞—é—â–µ–≥–æ –∂–∞–ª–æ–±—É –∏ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏"
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=types.ReplyKeyboardRemove())
        await state.set_state("location")
    else:
        if lang == "uz":
            text = "Murojaat va shikoyatlar beruvchi F.I.Sh / yuridik shaxs nomini kiriting"
        else:
            text = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –§.–ò.–®/—é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞, –ø–æ–¥–∞—é—â–µ–≥–æ –∂–∞–ª–æ–±—É –∏ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏"
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=types.ReplyKeyboardRemove())
        await state.set_state("location")


@dp.message_handler(state="get_name")
async def get_name(message: types.Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang")
    name = message.text
    await state.update_data(name=name)
    if lang == "uz":
        text = "üìû Telefon raqamingiz "
    else:
        text = "üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    await bot.send_message(chat_id=message.from_user.id, text=text)
    await state.set_state("phone")


@dp.message_handler(state="location")
async def get_location(message: types.Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang")
    name = message.text
    await state.update_data(name=name)
    if lang == "uz":
        text = "üìç Manzilingizni kiriting"
    else:
        text = "üìç –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å"
    await bot.send_message(chat_id=message.from_user.id, text=text)
    await state.set_state("get_address")


@dp.message_handler(state="get_address")
async def get_address(message: types.Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang")
    address = message.text
    await state.update_data(address=address)
    if lang == "uz":
        text = "Telefon raqamingiz "
    else:
        text = "üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    await bot.send_message(chat_id=message.from_user.id, text=text)
    await state.set_state("phone")


@dp.message_handler(state="phone")
async def get_phone(message: types.Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang")
    if lang == "uz":
        text = "üìÑ Murojaat matnini kiriting"
    else:
        text = "üìÑ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
    phone = message.text
    await state.update_data(phone=phone)
    await bot.send_message(chat_id=message.from_user.id, text=text)
    await state.set_state("main_text")


@dp.message_handler(state="main_text")
async def main_text(message: types.Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang")
    if lang == "uz":
        text = "Tegishli fayllarni biriktiring (video, audio, tekst va boshqalar)"
    else:
        text = "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã (–≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, —Ç–µ–∫—Å—Ç –∏ —Ç. –¥.)"
    main = message.text
    await state.update_data(main_text=main)
    markup = await cancel_keyboard(lang)
    await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=markup)
    await state.set_state("main_file")


@dp.message_handler(state="main_file", content_types=types.ContentType.DOCUMENT)
async def main_document(message: types.Message, state: FSMContext):
    file_id = message.document.file_id
    data = await state.get_data()
    name = message.document.file_name
    await message.document.download(destination=f"files/{name}")
    lang = data.get("lang")
    if lang == 'uz':
        text = f"<b>Kimdan: </b> {data.get('name')}\n" \
               f"<b>Tel: </b> {data.get('phone')}\n" \
               f"<b>username: </b> @{data.get('username')}\n" \
               f"<b>Murojaaj turi: </b> {data.get('choose')}\n" \
               f"<b>Murojaat matni: </b> {data.get('main_text')}\n"
    else:
        text = f"<b>–û—Ç –∫–æ–≥–æ: </b> {data.get('name')}\n" \
               f"<b>–¢–µ–ª: </b> {data.get('phone')}\n" \
               f"<b>–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> @{data.get('username')}\n" \
               f"<b>–¢–∏–ø: </b> {data.get('choose')}\n" \
               f"<b>–¢–µ–∫—Å—Ç: </b> {data.get('main_text')}\n"
    await state.update_data(body=text, file_name=name, file_type="only")
    markup = await confirm_keyboard(data.get('lang'))
    await bot.send_document(chat_id=message.from_user.id, document=file_id, caption=text, reply_markup=markup,
                            parse_mode=ParseMode.HTML)
    await state.set_state("for_end")


@dp.message_handler(state="main_file", content_types=types.ContentType.PHOTO)
async def main_photo(message: types.Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    data = await state.get_data()
    file_name = f"{file_id}.jpg"
    await message.photo[-1].download(destination=f"files/{file_id}.jpg")
    lang = data.get("lang")
    if lang == 'uz':
        text = f"<b>Kimdan: </b> {data.get('name')}\n" \
               f"<b>Tel: </b> {data.get('phone')}\n" \
               f"<b>username: </b> @{data.get('username')}\n" \
               f"<b>Murojaaj turi: </b> {data.get('choose')}\n" \
               f"<b>Murojaat matni: </b> {data.get('main_text')}\n"
    else:
        text = f"<b>–û—Ç –∫–æ–≥–æ: </b> {data.get('name')}\n" \
               f"<b>–¢–µ–ª: </b> {data.get('phone')}\n" \
               f"<b>–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> @{data.get('username')}\n" \
               f"<b>–¢–∏–ø: </b> {data.get('choose')}\n" \
               f"<b>–¢–µ–∫—Å—Ç: </b> {data.get('main_text')}\n"
    await state.update_data(body=text, file_name=file_name, file_type="only")
    markup = await confirm_keyboard(data.get('lang'))
    await bot.send_photo(chat_id=message.from_user.id, photo=file_id, caption=text, reply_markup=markup,
                         parse_mode=ParseMode.HTML)
    await state.set_state("for_end")


@dp.message_handler(state="main_file", content_types=types.ContentType.VIDEO)
async def main_video(message: types.Message, state: FSMContext):
    file_id = message.video.file_id
    data = await state.get_data()
    await message.video.download(destination=f"files/{message.video.file_name}")
    lang = data.get("lang")
    if lang == 'uz':
        text = f"<b>Kimdan: </b> {data.get('name')}\n" \
               f"<b>Tel: </b> {data.get('phone')}\n" \
               f"<b>username: </b> @{data.get('username')}\n" \
               f"<b>Murojaaj turi: </b> {data.get('choose')}\n" \
               f"<b>Murojaat matni: </b> {data.get('main_text')}\n"
    else:
        text = f"<b>–û—Ç –∫–æ–≥–æ: </b> {data.get('name')}\n" \
               f"<b>–¢–µ–ª: </b> {data.get('phone')}\n" \
               f"<b>–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> @{data.get('username')}\n" \
               f"<b>–¢–∏–ø: </b> {data.get('choose')}\n" \
               f"<b>–¢–µ–∫—Å—Ç: </b> {data.get('main_text')}\n"
    await state.update_data(body=text, file_name=message.video.file_name, file_type="only")
    dat = await state.get_data()
    markup = await confirm_keyboard(data.get('lang'))
    await bot.send_video(chat_id=message.from_user.id, video=file_id, caption=text, reply_markup=markup,
                         parse_mode=ParseMode.HTML)
    await state.set_state("for_end")


@dp.message_handler(state="main_file", content_types=types.ContentType.VOICE)
async def main_audio(message: types.Message, state: FSMContext):
    file_id = message.voice.file_id
    file_name = f"{file_id}.ogg"
    data = await state.get_data()
    await message.voice.download(destination=f"files/{file_id}.ogg")
    lang = data.get("lang")
    if lang == 'uz':
        text = f"<b>Kimdan: </b> {data.get('name')}\n" \
               f"<b>Tel: </b> {data.get('phone')}\n" \
               f"<b>username: </b> @{data.get('username')}\n" \
               f"<b>Murojaaj turi: </b> {data.get('choose')}\n" \
               f"<b>Murojaat matni: </b> {data.get('main_text')}\n"
    else:
        text = f"<b>–û—Ç –∫–æ–≥–æ: </b> {data.get('name')}\n" \
               f"<b>–¢–µ–ª: </b> {data.get('phone')}\n" \
               f"<b>–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> @{data.get('username')}\n" \
               f"<b>–¢–∏–ø: </b> {data.get('choose')}\n" \
               f"<b>–¢–µ–∫—Å—Ç: </b> {data.get('main_text')}\n"
    await state.update_data(body=text, file_name=message.video.file_name, file_type="only")
    markup = await confirm_keyboard(data.get('lang'))
    await bot.send_voice(chat_id=message.from_user.id, voice=file_id, caption=text, reply_markup=markup,
                         parse_mode=ParseMode.HTML)
    await state.set_state("for_end")


@dp.message_handler(state="main_file", content_types=types.ContentType.AUDIO)
async def main_audio(message: types.Message, state: FSMContext):
    data = await state.get_data()
    audio = message.audio
    await message.audio.download(destination=f"files/{audio.file_name}")
    lang = data.get("lang")
    if lang == 'uz':
        text = f"<b>Kimdan: </b> {data.get('name')}\n" \
               f"<b>Tel: </b> {data.get('phone')}\n" \
               f"<b>username: </b> @{data.get('username')}\n" \
               f"<b>Murojaaj turi: </b> {data.get('choose')}\n" \
               f"<b>Murojaat matni: </b> {data.get('main_text')}\n"
    else:
        text = f"<b>–û—Ç –∫–æ–≥–æ: </b> {data.get('name')}\n" \
               f"<b>–¢–µ–ª: </b> {data.get('phone')}\n" \
               f"<b>–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> @{data.get('username')}\n" \
               f"<b>–¢–∏–ø: </b> {data.get('choose')}\n" \
               f"<b>–¢–µ–∫—Å—Ç: </b> {data.get('main_text')}\n"
    await state.update_data(body=text, file_name=message.audio.file_name, file_type="only")
    markup = await confirm_keyboard(data.get('lang'))
    await bot.send_audio(chat_id=message.from_user.id, audio=audio.file_id, caption=text, reply_markup=markup,
                         parse_mode=ParseMode.HTML)
    await state.set_state("for_end")


@dp.message_handler(state="main_file", content_types=types.ContentType.TEXT)
async def cancel_file(message: types.Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get('lang')
    if lang == 'uz':
        text = f"<b>Kimdan: </b> {data.get('name')}\n" \
               f"<b>Tel: </b> {data.get('phone')}\n" \
               f"<b>username: </b> @{data.get('username')}\n" \
               f"<b>Murojaaj turi: </b> {data.get('choose')}\n" \
               f"<b>Murojaat matni: </b> {data.get('main_text')}\n"
    else:
        text = f"<b>–û—Ç –∫–æ–≥–æ: </b> {data.get('name')}\n" \
               f"<b>–¢–µ–ª: </b> {data.get('phone')}\n" \
               f"<b>–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: </b> @{data.get('username')}\n" \
               f"<b>–¢–∏–ø: </b> {data.get('choose')}\n" \
               f"<b>–¢–µ–∫—Å—Ç: </b> {data.get('main_text')}\n"
    await state.update_data(body=text, file_name="")
    markup = await confirm_keyboard(data.get('lang'))
    await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=markup, parse_mode=ParseMode.HTML)
    await state.set_state("for_end")


@dp.message_handler(state="for_end")
async def end(message: types.Message, state: FSMContext):
    message_text = message.text
    data = await state.get_data()
    body = data.get("body")
    lang = data.get("lang")
    call_data = ""
    if lang == "uz":
        if message_text == "‚úÖ Murojaatni yuborish":
            call_data = "confirm"
        else:
            call_data = "calcel"
        text = "Murojaat yuborildi"
    else:
        if message_text == "‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å":
            call_data = "confirm"
        else:
            call_data = "calcel"
        text = "–û–±—Ä–∞—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    file_type = data.get("file_type")
    file_name = data.get("file_name")
    if call_data == 'confirm':
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=types.ReplyKeyboardRemove())
        sender_address = 'forbot2503@gmail.com'
        sender_pass = 'Wertus89'
        receiver_address = 'jahongirnormuminov8@gmail.com'
        message = MIMEMultipart()
        message['From'] = sender_address
        message['To'] = receiver_address
        message['Subject'] = 'Yangi murojaat'
        message.attach(MIMEText(body, 'html'))
        if file_name != "":
            if file_type == "only":
                file = MIMEApplication(open(f"files/{file_name}", 'rb').read())
                file.add_header('Content-Disposition', 'attachment', filename=file_name)
                message.attach(file)
            else:
                files = file_name.split("=+=")
        session = smtplib.SMTP('smtp.gmail.com', 587)  # use gmail with port
        session.starttls()  # enable security
        session.login(sender_address, sender_pass)  # login with mail_id and password
        text = message.as_string()
        session.sendmail(sender_address, receiver_address, text)
        session.quit()

    else:
        data = await state.get_data()
        lang = data.get("lang")
        if lang == "uz":
            text = "Tegishli fayllarni biriktiring (video, audio, tekst va boshqalar)"
        else:
            text = "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã (–≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, —Ç–µ–∫—Å—Ç –∏ —Ç. –¥.)"
        markup = await cancel_keyboard(lang)
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=markup)
        await state.set_state("main_file")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
